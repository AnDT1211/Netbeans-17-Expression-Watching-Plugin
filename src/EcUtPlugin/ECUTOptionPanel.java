/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/NetBeansModuleDevelopment-files/template_mypluginPanel.java to edit this template
 */
package EcUtPlugin;

import EcUtPlugin.model.OptionModel;
import EcUtPlugin.service.FileService;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.io.File;
import javax.swing.JTextArea;
import javax.swing.undo.UndoManager;
import org.openide.util.NbPreferences;

final public class ECUTOptionPanel extends javax.swing.JPanel {

    private final ECUTOptionOptionsPanelController controller;

    ECUTOptionPanel(ECUTOptionOptionsPanelController controller) {
        this.controller = controller;
        initComponents();
        // TODO listen to changes in form fields and call controller.changed()
//        init();
        setKeyListenerForTextArea_UNDOREDO();
    }

    /**
     * add key listener event for watch text area <br/>
     * ctr Z for undo <br/>
     * ctr Y for redo
     */
    private void setKeyListenerForTextArea_UNDOREDO() {
        setUndoEvent(notWatchKeywords, new UndoManager());
        setUndoEvent(toStringKeywords, new UndoManager());
        setUndoEvent(mapGetKeywords, new UndoManager());
        setUndoEvent(methodChains, new UndoManager());
    }

    void setUndoEvent(JTextArea textField, UndoManager undoManager) {
        textField.getDocument().addUndoableEditListener(undoManager);
        textField.addKeyListener(new KeyAdapter() {
            @Override
            public void keyPressed(KeyEvent evt) {
                int ctr = KeyEvent.CTRL_DOWN_MASK;
                try {
                    if ((evt.getModifiersEx() & ctr) == ctr && evt.getKeyCode() == KeyEvent.VK_Z) {
                        undoManager.undo();
                    } else if ((evt.getModifiersEx() & ctr) == ctr && evt.getKeyCode() == KeyEvent.VK_Y) {
                        undoManager.redo();
                    }
                } catch (Exception ex) {

                }
            }
        });
    }

    File optionFile;

    void init() {
        optionFile = new File(FileService.optionPathFile);
        if (!optionFile.exists()) {
            OptionModel optionModel = OptionModel.init();
            FileService.writeSettingObjectToFile(optionModel);
        }

        // read
        OptionModel optionModel = FileService.readObjectFromSettingFile();

        mapGetKeywords.setText(optionModel.getMapGetKeywords());
        notWatchKeywords.setText(optionModel.getNotWatchKeywords());
        toStringKeywords.setText(optionModel.getToStringKeywords());
        autoFlag.setSelected(optionModel.isAutoFlag());
        methodChains.setText(optionModel.getMethodChains());
        NbPreferences.forModule(ECUTOptionPanel.class).putBoolean("autoFlag", autoFlag.isSelected());
        NbPreferences.forModule(ECUTOptionPanel.class).put("notWatchKeywords", notWatchKeywords.getText());
        NbPreferences.forModule(ECUTOptionPanel.class).put("toStringKeywords", toStringKeywords.getText());
        NbPreferences.forModule(ECUTOptionPanel.class).put("mapGetKeywords", mapGetKeywords.getText());
        NbPreferences.forModule(ECUTOptionPanel.class).put("methodChains", methodChains.getText());
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        autoFlag = new javax.swing.JCheckBox();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        notWatchKeywords = new javax.swing.JTextArea();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        toStringKeywords = new javax.swing.JTextArea();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        mapGetKeywords = new javax.swing.JTextArea();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        methodChains = new javax.swing.JTextArea();

        jPanel1.setBackground(new java.awt.Color(255, 255, 204));

        org.openide.awt.Mnemonics.setLocalizedText(autoFlag, org.openide.util.NbBundle.getMessage(ECUTOptionPanel.class, "ECUTOptionPanel.autoFlag.text")); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(autoFlag)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(autoFlag)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        notWatchKeywords.setColumns(20);
        notWatchKeywords.setRows(5);
        jScrollPane3.setViewportView(notWatchKeywords);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 661, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 291, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab(org.openide.util.NbBundle.getMessage(ECUTOptionPanel.class, "ECUTOptionPanel.jPanel2.TabConstraints.tabTitle"), jPanel2); // NOI18N

        toStringKeywords.setColumns(20);
        toStringKeywords.setRows(5);
        jScrollPane4.setViewportView(toStringKeywords);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 661, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 291, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab(org.openide.util.NbBundle.getMessage(ECUTOptionPanel.class, "ECUTOptionPanel.jPanel3.TabConstraints.tabTitle"), jPanel3); // NOI18N

        mapGetKeywords.setColumns(20);
        mapGetKeywords.setRows(5);
        jScrollPane1.setViewportView(mapGetKeywords);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 661, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 291, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab(org.openide.util.NbBundle.getMessage(ECUTOptionPanel.class, "ECUTOptionPanel.jPanel4.TabConstraints.tabTitle"), jPanel4); // NOI18N

        methodChains.setColumns(20);
        methodChains.setRows(5);
        jScrollPane2.setViewportView(methodChains);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 661, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 291, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab(org.openide.util.NbBundle.getMessage(ECUTOptionPanel.class, "ECUTOptionPanel.jPanel5.TabConstraints.tabTitle"), jPanel5); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1))
        );
    }// </editor-fold>//GEN-END:initComponents

    void load() {
        // TODO read settings and initialize GUI
        // Example:        
        // someCheckBox.setSelected(Preferences.userNodeForPackage(ECUTOptionPanel.class).getBoolean("someFlag", false));
        // or for org.openide.util with API spec. version >= 7.4:
        // someCheckBox.setSelected(NbPreferences.forModule(ECUTOptionPanel.class).getBoolean("someFlag", false));
        // or:
        // someTextField.setText(SomeSystemOption.getDefault().getSomeStringProperty());
        init();
    }

    void store() {
        // TODO store modified settings
        // Example:
        // Preferences.userNodeForPackage(ECUTOptionPanel.class).putBoolean("someFlag", someCheckBox.isSelected());
        // or for org.openide.util with API spec. version >= 7.4:
        // NbPreferences.forModule(ECUTOptionPanel.class).putBoolean("someFlag", someCheckBox.isSelected());
        // or:
        // SomeSystemOption.getDefault().setSomeStringProperty(someTextField.getText());

        NbPreferences.forModule(ECUTOptionPanel.class).putBoolean("autoFlag", autoFlag.isSelected());
        NbPreferences.forModule(ECUTOptionPanel.class).put("notWatchKeywords", notWatchKeywords.getText());
        NbPreferences.forModule(ECUTOptionPanel.class).put("toStringKeywords", toStringKeywords.getText());
        NbPreferences.forModule(ECUTOptionPanel.class).put("mapGetKeywords", mapGetKeywords.getText());
        NbPreferences.forModule(ECUTOptionPanel.class).put("methodChains", methodChains.getText());
        OptionModel optionModel = FileService.readObjectFromSettingFile();
        optionModel.setAutoFlag(autoFlag.isSelected());
        optionModel.setNotWatchKeywords(notWatchKeywords.getText());
        optionModel.setToStringKeywords(toStringKeywords.getText());
        optionModel.setMapGetKeywords(mapGetKeywords.getText());
        optionModel.setMethodChains(methodChains.getText());

        FileService.writeSettingObjectToFile(optionModel);
    }

    boolean valid() {
        // TODO check whether form is consistent and complete
        return true;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox autoFlag;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea mapGetKeywords;
    private javax.swing.JTextArea methodChains;
    private javax.swing.JTextArea notWatchKeywords;
    private javax.swing.JTextArea toStringKeywords;
    // End of variables declaration//GEN-END:variables
}
